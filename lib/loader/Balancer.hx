package loader;

import tools.NativeJS;

/**
 * –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–≥—Ä—É–∑–∫–∏. üö¶  
 * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞.
 * 
 * –°–ø–æ—Å–æ–± –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
 * 1. –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä: `Balancer`, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
 *    –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤.
 * 2. –ù–∞–∑–Ω–∞—á–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä: `Balancer` –∫–∞–∂–¥–æ–º—É
 *    –∑–∞–≥—Ä—É–∑—á–∏–∫—É: `ILoader` **–¥–æ** –≤—ã–∑–æ–≤–∞ –∏—Ö –º–µ—Ç–æ–¥–∞:
 *    `load()`
 * 
 * –ü—Ä–∏–º–µ—Ä:
 * ```
 * var b = new Balancer(5); // 5 –ó–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
 * 
 * var l1:ILoader; // –ö–∞–∫–æ–π-—Ç–æ –Ω–æ–≤—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ 1
 * l1.balancer = b;
 * 
 * var l2:ILoader; // –ö–∞–∫–æ–π-—Ç–æ –Ω–æ–≤—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ 2
 * l2.balancer = b;
 * 
 * // –ó–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –æ—á–µ—Ä–µ–¥–∏ –∏ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
 * l1.load();
 * l2.load();
 * ```
 */
@:dce 
class Balancer
{
    /**
     * –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤. *(mc)*  
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–æ—Å–∞
     * –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
     * –∏–∑ –µ–≥–æ –æ—á–µ—Ä–µ–¥–∏.
     */
    inline static private var INTERVAL_TIME:Int = 100;

    // –ü—Ä–∏–≤–∞—Ç
    private var arr:Array<ILoader> = [];
    private var id:Dynamic = null;
    private var time:Float = 0;

    /**
     * –°–æ–∑–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫.
     * @param rps –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤. *(–®—Ç—É–∫ –≤ —Å–µ–∫—É–Ω–¥—É)*
     */
    public function new(?rps:Float) {
        if (rps != null)
            this.rps = rps;
    }

    /**
     * –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤. *(–®—Ç—É–∫ –≤ —Å–µ–∫—É–Ω–¥—É)*  
     * - –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ: `0`
     * - –ï—Å–ª–∏ –∑–∞–¥–∞–Ω–æ: `0` - –∑–∞–ø—Ä–æ—Å—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥—É—Ç
     *   –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.
     * 
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `1` *(–û–¥–∏–Ω –∑–∞–ø—Ä–æ—Å –≤ —Å–µ–∫—É–Ω–¥—É)*
     */
    public var rps(default, set):Float = 1;
    function set_rps(value:Float):Float {
        if (value > 0) {
            if (value == rps)
                return value;
            rps = value;
            if (len > 0 && id == null)
                id = untyped setInterval(onUpdate, INTERVAL_TIME);
        }
        else {
            if (rps == 0)
                return value;
            rps = 0;
            if (id != null) {
                untyped clearInterval(id);
                id = null;
            }
        }
        return value;
    }

    /**
     * –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏.  
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `0`
     */
    public var len(get, never):Int;
    inline function get_len():Int {
        return arr.length;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ.  
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑
     * –æ—á–µ—Ä–µ–¥–∏.
     */
    private function onUpdate():Void {

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        // –í—ã–∫–ª—é—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç:
        if (len == 0) {
            if (id != null) {
                untyped clearInterval(id);
                id = null;
            }
            return;
        }

        // –ú–µ—Ç–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç—Å—è, –µ—Å–ª–∏ rps <= 0:
        var t = 1000/rps;        // –í—Ä–µ–º—è –Ω–∞ 1 –∑–∞–ø—Ä–æ—Å. (mc)
        var ct = NativeJS.now(); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è. (mc)
        var dt = ct-time;        // –†–µ–∞–ª—å–Ω–æ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. (mc)

        // –í—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –¥–∞–∂–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 1 –∑–∞–ø—Ä–æ—Å–∞:
        if (dt < t)
            return;

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è 1 —Ç–∏–∫–∞: (–ß—Ç–æ–± –Ω–µ –±—ã–ª–æ —Å–∫–∞—á–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤)
        var mt = Math.max(t+INTERVAL_TIME, INTERVAL_TIME*2);
        var num = 0; // <-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (dt > mt) {
            // –°–∫–∞—á–æ–∫ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:
            num = Math.floor(mt/t);
            if (num > len)
                num = len;
            time = ct; // <-- –ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ–ø—É—Å–∫–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤ —Å–∫–∞—á–∫–µ
        }
        else {
            // –ù–µ—Ç —Å–∫–∞—á–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:
            num = Math.floor(dt/t);
            if (num > len)
                num = len;
            time += num*t; // <-- –¢–æ—á–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ, –Ω–∏ —Å–µ–∫—É–Ω–¥—ã –ø—Ä–æ–ø—É—â–µ–Ω–æ
        }

        // –ß–∏—Å—Ç–∏–º –æ—á–µ—Ä–µ–¥—å –æ—Ç null –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –µ—ë:
        var i = 0;
        var j = 0;
        var l = len;
        while (i < l) {
            if (arr[i] == null) {
                i ++;
                continue;
            }
            arr[j++] = arr[i++];
        }
        if (i != j)
            arr.resize(j);
        arr.sort(compare);

        // –ó–∞–±–∏—Ä–∞–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:
        // (–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–æ–∫ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è!)
        var a:Array<ILoader> = NativeJS.array(num);
        i = num;
        while (i-- > 0) {
            a[i] = arr[i];
            arr[i] = null; // <-- –£–¥–∞–ª–∏—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏
        }

        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã:
        while (num-- > 0) {
            if (arr[num].state == LoaderState.PENDING && arr[num].balancer == this)
                arr[num].loadStart();
        }
    }

    /**
     * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É.
     * @param x –ó–∞–≥—Ä—É—á–∑–∏–∫ 1.
     * @param y –ó–∞–≥—Ä—É—á–∑–∏–∫ 2.
     * @return –ü–æ—Ä—è–¥–æ–∫ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
     */
    static private function compare(x:ILoader, y:ILoader):Int {
        if (x.priority > y.priority)
            return -1;
        if (x.priority < y.priority)
            return 1;
        return 0;
    }

    /**
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –æ—á–µ—Ä–µ–¥–∏.  
     * –í—ã–∑–æ–≤ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤,
     * –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –æ—á–µ—Ä–µ–¥–∏.  
     * –û—á–µ—Ä–µ–¥—å –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—á–∏—â–∞–µ—Ç—Å—è.
     */
    public function flush():Void {
        var i = 0;
        var l = len;
        var a = arr;

        arr = []; // <-- –°–ø–∏—Å–æ–∫ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∏–∑-–∑–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–ª–±–µ–∫–æ–≤
        time = NativeJS.now();

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω—É–∂–Ω—ã:
        if (id != null) {
            untyped clearInterval(id);
            id = null;
        }

        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã:
        while (i < l) {
            var l = a[i++];
            if (l != null && l.state == LoaderState.PENDING && l.balancer == this)
                l.loadStart();
        }
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫.
     * - –£ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥:
     *   `Loader.close()`.
     * - –£–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∏ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è.
     * - –û—á–µ—Ä–µ–¥—å –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—á–∏—â–∞–µ—Ç—Å—è.
     */
    public function clear():Void {
        var i = 0;
        var l = len;
        var a = arr;

        arr = new Array(); // <-- –°–ø–∏—Å–æ–∫ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∏–∑-–∑–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–ª–±–µ–∫–æ–≤

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω—É–∂–Ω—ã:
        if (id != null) {
            untyped clearInterval(id);
            id = null;
        }

        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å:
        while (i < l) {
            var l = a[i++];
            if (l == null || l.state != LoaderState.PENDING)
                continue;
            l.close();
        }
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É.  
     * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤ –æ—á–µ—Ä–µ–¥–∏ –∏
     * –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –≤ –±—É–¥—É—â–µ–º –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫—É. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥
     * –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç
     * –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ –æ—á–µ—Ä–µ–¥—å.
     * - –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –∏–Ω–∞—á–µ –±—É–¥—É—Ç
     *   –¥—É–±–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏.
     * - –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫—É
     *   –æ—Ç–º–µ–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑–æ–≤–æ–º –º–µ—Ç–æ–¥–∞: `Loader.close()`
     * @param loader –ó–∞–≥—Ä—É–∑—á–∏–∫.
     */
    @:allow(loader.ILoader)
    private function add(loader:ILoader):Void {
        arr.push(loader);
        if (rps > 0 && id == null)
            id = untyped setInterval(onUpdate, INTERVAL_TIME);
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.  
     * –£–¥–∞–ª—è–µ—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä.
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö
     * –¥–µ–π—Å—Ç–≤–∏–π.
     * @param loader –ó–∞–≥—Ä—É–∑—á–∏–∫.
     */
    @:allow(loader.ILoader)
    private function remove(loader:ILoader):Void {
        var i = len;
        while (i-- != 0) {
            if (arr[i] == loader) {
                arr[i] = null; // <-- –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ—Å—Ç—Ä–æ–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
                return;
            }
        }
    }
}