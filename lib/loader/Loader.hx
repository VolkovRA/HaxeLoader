package loader;

import js.lib.Error;

/**
 * Класс **Loader** загружает данные с URL-адреса в виде текста или двоичных данных.
 * 
 * Данная функция целесообразна при загрузке текстовых файлов, XML-объектов или других
 * сведений, которые будут использованы в динамическом приложении по обработке данных.
 * Объект **Loader** загружает все данные с URL-адреса, прежде чем сделать их доступными
 * для кода в приложениях. Он отправляет оповещения о состоянии загрузки, которые можно
 * отслеживать с помощью свойств: `bytesLoaded` и `bytesTotal`.
 */
interface Loader
{
    ////////////////
    //   МЕТОДЫ   //
    ////////////////

    /**
     * Отправить и/или загрузить данные с заданного URL-адреса.
     * 
     * Данные могут быть получены как текст или необработанные двоичные данные.
     * Это зависит от значения, установленного для свойства `dataFormat`.
     * Обратите внимание на то, что значением свойства `dataFormat` по умолчанию
     * является текст. Для отправки данных на указанный URL-адрес можно установить
     * в объекте **Request** свойство `data`.
     * 
     * Перед вызовом добавьте все необходимые колбеки, так как они могут быть
     * вызваны мгновенно.
     * 
     * @param request Параметры запроса.
     */
    public function load(request:Request):Void;

    /**
     * Закрыть операцию загрузки.
     * 
     * Любая операция загрузки, выполняемая в данный момент, немедленно прекращается.
     * Колбеки не вызываются.
     * 
     * Вызов игнорируется, если запрос не выполняется.
     */
    public function close():Void;

    /**
     * Получить список заголовков ответа сервера.
     * Возвращает список заголовков ответа или `null`, если их нет.
     * @return Список заголовков ответа сервера.
     */
    public function getHeaders():Array<Header>;



    //////////////////
    //   СВОЙСТВА   //
    //////////////////

    /**
     * Объём загруженных данных. (Байт)
     * 
     * По умолчанию: `0`
     */
    public var bytesLoaded(default, null):Int;

    /**
     * Общий объём загружаемых данных. (Байт)
     * 
     * Во время операции загрузки данное свойство имеет значение `0` и заполняется по завершении операции.
     * Вдобавок, отсутствие заголовка `Content-Length` не позволит определить параметр `bytesTotal`.
     * 
     * По умолчанию: `0`
     */
    public var bytesTotal(default, null):Int;

    /**
     * Данные, полученные при загрузке.
     * Данное свойство заполняется только после завершения операции загрузки.
     * 
     * По умолчанию: `null`
     */
    public var data(default, null):Dynamic;

    /**
     * Код статуса ответа сервера.
     * По умолчанию: `0`
     */
    public var status(default, null):Int;

    /**
     * Определяет, в каком виде получаются загружаемые данные:
     * - `DataFormat.TEXT` - Данные интерпретируются как строка. (По умолчанию)
     * - `DataFormat.JSON` - Данные интерпретируются как строка и преобразуются в объект: `JSON.parse()`.
     * - `DataFormat.BINARY` - Двоичные данные, никак не обрабатываются.
     * 
     * По умолчанию: `DataFormat.TEXT`
     */
    public var dataFormat:DataFormat;

    /**
     * Объект ошибки.
     * 
     * Содержит описание ошибки если запрос не удался.
     * Проверьте это свойство перед доступом к свойству: `data`.
     * 
     * По умолчанию: `null`
     */
    public var error:Error;



    /////////////////
    //   КОЛБЕКИ   //
    /////////////////
    
    /**
     * Запрос завершён.
     * 
     * Отправляется после декодирования всех полученных данных и размещения их в свойстве `data`
     * объекта **Loader**, либо при наступлений неустранимой ошибки.
     * 
     * По умолчанию: `null`
     */
    public var onComplete:Loader->Void;

    /**
     * Получен ответ от сервера.
     * 
     * Это событие предшествует событию `onComplete`. Можно читать статус ответа сервера и
     * получить его заголовки.
     * 
     * По умолчанию: `null`
     */
    public var onResponse:Loader->Void;

    /**
     * Отправляется в случае получения данных в ходе операции загрузки.
     * 
     * Это событие предшествует событию `onComplete` и может быть вовсе не вызвано. (Маленький запрос)
     * 
     * По умолчанию: `null`
     */
    public var onProgress:Loader->Void;
}